@model CustomAuthentication2.ViewModels.EditAccountViewModel
@{
    ViewBag.Title = "Edit My Profile";
}
@using CustomAuthentication2.Security
<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("EditAccount", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{

    <span class="text-danger">@ViewBag.Error</span>
    <span>@ViewBag.Success</span>
    
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    

    <div class="form-group">
        @Html.LabelFor(model => model.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FullName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.FullName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    @Html.HiddenFor(model => model.Username,
                      new { id = "hiddenRole", Value = SessionPersister.Username })
    @Html.HiddenFor(model => model.Roles,
                          new { id = "hiddenRole", Value = ViewBag.role })
    
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Submit" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}